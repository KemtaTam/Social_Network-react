{"version":3,"file":"static/js/22.527801bf.chunk.js","mappings":"6MACA,GAAgB,YAAc,2BAA2B,SAAW,wBAAwB,OAAS,sBAAsB,SAAW,wBAAwB,WAAa,0BAA0B,MAAQ,qBAAqB,UAAY,yBAAyB,KAAO,qB,SCexQA,EAAY,WACjB,IAAQC,GAAeC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,QAA/CH,WACFI,GAAWC,EAAAA,EAAAA,KAEjB,OACC,SAAC,KAAD,CACCC,cAAe,CAAEC,MAAO,GAAIC,SAAU,GAAIC,gBAAgB,EAAOC,QAAS,IAC1EC,iBAAkBC,EAAAA,GAAW,CAC5BL,MAAOK,EAAAA,KAAaL,MAAM,yBAAyBM,SAAS,YAC5DL,SAAUI,EAAAA,KAAaE,IAAI,EAAG,gCAAgCD,SAAS,cAExEE,SAAU,SAACC,EAAD,GAAuD,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC/Cd,GAASe,EAAAA,EAAAA,IAAMH,EAAQE,IACvBF,EAAOR,SAAW,GAClBS,GAAc,IAThB,SAWE,gBAAGG,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAjB,OACA,SAAC,KAAD,CAAMC,UAAWC,EAAAA,KAAjB,UACC,iBAAKD,UAAS,UAAKC,EAAAA,YAAL,YAAsBF,GAAUE,EAAAA,OAA9C,WACC,gBAAKD,UAAWC,EAAAA,UAAhB,SAA8BF,KAC9B,4BACC,SAAC,KAAD,CACCC,UAAWC,EAAAA,SACXC,KAAK,QACLC,KAAK,QACLC,YAAY,WAEb,SAAC,KAAD,CAAcJ,UAAWC,EAAAA,SAAYE,KAAK,QAAQE,UAAU,YAE7D,4BACC,SAAC,KAAD,CACCL,UAAWC,EAAAA,SACXC,KAAK,WACLC,KAAK,WACLC,YAAY,cAEb,SAAC,KAAD,CAAcJ,UAAWC,EAAAA,SAAYE,KAAK,WAAWE,UAAU,YAEhE,iBAAKL,UAAWC,EAAAA,WAAhB,WACC,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,mBAD7B,kBAIA,mBAAQH,UAAWC,EAAAA,OAAUC,KAAK,SAASI,SAAUR,EAArD,mBAGCpB,IACA,0BACC,gBAAK6B,IAAK7B,EAAY8B,IAAI,cAG3B9B,IACA,SAAC,KAAD,CAAOsB,UAAWC,EAAAA,SAAYE,KAAK,UAAUC,YAAY,qBA2BhE,EAlBc,WAGb,OAFmBzB,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,QAA3C4B,QAGA,SAAC,KAAD,CAAUC,GAAI,cAIrB,4BACC,iBAAKV,UAAWC,EAAAA,KAAhB,WACC,0BAAG,kCAAH,0BACA,0BAAG,qCAAH,mBAED,SAACxB,EAAD","sources":["webpack://my-app/./src/Pages/Login/Login.module.css?c471","Pages/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"Login_formWrapper__0jkPc\",\"elemForm\":\"Login_elemForm__SI1Gn\",\"bLogin\":\"Login_bLogin__sC7nb\",\"errorMes\":\"Login_errorMes__FgVlA\",\"rememberMe\":\"Login_rememberMe__Kyuzj\",\"error\":\"Login_error__NV1PK\",\"errorText\":\"Login_errorText__9sdY6\",\"info\":\"Login_info__EGHEc\"};","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\r\nimport { login } from \"../../redux/reducers/auth-reducer\";\r\nimport s from \"./Login.module.css\";\r\n\r\ntype ValuesType = {\r\n\temail: string;\r\n\tpassword: string;\r\n\trememberToggle: boolean;\r\n\tcaptcha: string;\r\n};\r\n\r\nconst LoginForm = () => {\r\n\tconst { captchaUrl } = useAppSelector((state) => state.auth);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: \"\", password: \"\", rememberToggle: false, captcha: \"\" }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\temail: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n\t\t\t\tpassword: Yup.string().min(4, \"Must be 4 characters or more\").required(\"Required\"),\r\n\t\t\t})}\r\n\t\t\tonSubmit={(values: ValuesType, { setSubmitting, setStatus }) => {\r\n\t\t\t\tdispatch(login(values, setStatus));\r\n\t\t\t\tvalues.password = \"\";\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t}}>\r\n\t\t\t{({ isSubmitting, status }) => (\r\n\t\t\t\t<Form className={s.form}>\r\n\t\t\t\t\t<div className={`${s.formWrapper} ${status && s.error}`}>\r\n\t\t\t\t\t\t<div className={s.errorText}>{status}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={s.elemForm}\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage className={s.errorMes} name=\"email\" component=\"div\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={s.elemForm}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage className={s.errorMes} name=\"password\" component=\"div\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.rememberMe}>\r\n\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"rememberToggle\" />\r\n\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className={s.bLogin} type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{captchaUrl && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img src={captchaUrl} alt=\"captcha\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{captchaUrl && (\r\n\t\t\t\t\t\t\t<Field className={s.elemForm} name=\"captcha\" placeholder=\"captcha\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nconst Login = () => {\r\n\tconst { isAuth } = useAppSelector((state) => state.auth);\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to={\"/profile\"} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.info}>\r\n\t\t\t\t<p><b>Email:</b> hfucax@mailto.plus</p>\r\n\t\t\t\t<p><b>Password:</b> cucumber</p>\r\n\t\t\t</div>\r\n\t\t\t<LoginForm />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LoginForm","captchaUrl","useAppSelector","state","auth","dispatch","useAppDispatch","initialValues","email","password","rememberToggle","captcha","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","setStatus","login","isSubmitting","status","className","s","type","name","placeholder","component","disabled","src","alt","isAuth","to"],"sourceRoot":""}