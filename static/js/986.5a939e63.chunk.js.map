{"version":3,"file":"static/js/986.5a939e63.chunk.js","mappings":"4LACA,EAA6B,+BAA7B,EAAmE,yBAAnE,EAAqG,2B,mBCG/FA,EAAa,SAAC,GAAD,SAAEC,SAA8CC,EAAWA,GAgB9E,EAVwC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACvCC,EAAO,YAAcF,EAE3B,OACC,eAAIG,UAAWJ,EAAf,UACC,SAAC,KAAD,CAASK,GAAIF,EAAMC,UAAWN,EAA9B,SAA2CI,OCd9C,EAA+B,kCCa/B,EARyC,SAAC,GAAe,IAAdI,EAAa,EAAbA,QAC1C,OACC,gBAAKF,UAAWG,EAAhB,SACED,K,mBCRJ,GAAgB,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,eAAiB,gCAAgC,YAAc,6BAA6B,MAAQ,wBCelQE,EAAuC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzCC,GAAWC,EAAAA,EAAAA,KAEjB,OACC,SAAC,KAAD,CACCC,cAAe,CAAEN,QAAS,IAC1BO,iBAAkBC,EAAAA,GAAW,CAC5BR,QAASQ,EAAAA,KAAaC,SAAS,MAEhCC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAEpBR,EAASD,EAAWQ,EAAOX,UAC3BW,EAAOX,QAAU,GACjBY,GAAc,IAThB,SAWE,gBAAGC,EAAH,EAAGA,aAAH,OACA,SAAC,KAAD,WACC,iBAAKf,UAAWG,EAAAA,YAAhB,WACC,SAAC,KAAD,CAAOa,GAAG,WAAWlB,KAAK,UAAUmB,YAAY,wBAChD,SAAC,KAAD,CAAcjB,UAAWG,EAAAA,SAAYL,KAAK,UAAUoB,UAAU,SAC9D,mBAAQlB,UAAWG,EAAAA,MAASgB,KAAK,SAASC,SAAUL,EAApD,2BAsCN,EA5BgB,WACf,OAAqCM,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,cAA7DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACbC,GAAWL,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMK,QAA3CD,OAEJE,EAAcJ,EAAYK,KAAI,SAACC,GAAD,OACjC,SAAC,EAAD,CAAYjC,GAAIiC,EAAGjC,GAAIC,KAAMgC,EAAGhC,MAAWgC,EAAGjC,OAE3CkC,EAAcN,EAAYI,KAAI,SAACC,GAAD,OACjC,SAAC,EAAD,CAAa5B,QAAS4B,EAAG5B,SAAc4B,EAAGjC,OAG3C,OAAK6B,GAKJ,iBAAK1B,UAAWG,EAAAA,QAAhB,WACC,gBAAKH,UAAWG,EAAAA,QAAhB,UACC,eAAIH,UAAWG,EAAAA,WAAf,SAA8ByB,OAE/B,iBAAK5B,UAAWG,EAAAA,eAAhB,WACC,gBAAKH,UAAWG,EAAAA,SAAhB,SAA6B4B,KAC7B,SAAC3B,EAAD,CAAaC,WAAY2B,EAAAA,EAAAA,oBAVpB,SAAC,KAAD,CAAU/B,GAAI","sources":["webpack://my-app/./src/Pages/Dialogs/DialogItem/DialogItem.module.css?9351","Pages/Dialogs/DialogItem/DialogItem.tsx","webpack://my-app/./src/Pages/Dialogs/MessageItem/MessageItem.module.css?98d4","Pages/Dialogs/MessageItem/MessageItem.tsx","webpack://my-app/./src/Pages/Dialogs/Dialogs.module.css?edb9","Pages/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs_li\":\"DialogItem_dialogs_li__5m9Vr\",\"item\":\"DialogItem_item__5EQYC\",\"active\":\"DialogItem_active__jqze1\"};","import d from \"./DialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst activeLink = ({isActive}: {isActive: boolean}) => isActive ? d.active : d.item; \r\n\r\ntype PropsType = {\r\n\tid: number;\r\n\tname: string;\r\n}\r\nconst DialogItem: React.FC<PropsType> = ({id, name}) => {\r\n\tconst path = \"/dialogs/\" + id;\r\n\r\n\treturn (\r\n\t\t<li className={d.dialogs_li}>\r\n\t\t\t<NavLink to={path} className={activeLink}>{name}</NavLink>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message_item\":\"MessageItem_message_item__KGLEN\"};","import React from \"react\";\r\nimport s from \"./MessageItem.module.css\"\r\n\r\ntype PropsType = {\r\n\tmessage: string;\r\n}\r\nconst MessageItem: React.FC<PropsType> = ({message}) => { \r\n\treturn (\r\n\t\t<div className={s.message_item}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MessageItem;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__a3jfb\",\"dialogs\":\"Dialogs_dialogs__fixwd\",\"messages\":\"Dialogs_messages__mKrlG\",\"dialogs_ul\":\"Dialogs_dialogs_ul__GalbR\",\"messageWrapper\":\"Dialogs_messageWrapper__UZ47Q\",\"sendMessage\":\"Dialogs_sendMessage__pq6uI\",\"bSend\":\"Dialogs_bSend__p5grP\"};","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport { DialogType, MessageType } from \"../../types/dialogs-types\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\r\nimport { actions } from \"../../redux/reducers/dialogs-reducer\";\r\nimport s from \"./Dialogs.module.css\";\r\n\r\ntype PropsFormType = {\r\n\taddMessage: (newMessageBody: string) => void;\r\n};\r\nconst DialogsForm: React.FC<PropsFormType> = ({ addMessage }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ message: \"\" }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tmessage: Yup.string().required(\"\"),\r\n\t\t\t})}\r\n\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t// todo\r\n\t\t\t\tdispatch(addMessage(values.message) as unknown as AnyAction);\r\n\t\t\t\tvalues.message = \"\";\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t}}>\r\n\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className={s.sendMessage}>\r\n\t\t\t\t\t\t<Field as=\"textarea\" name=\"message\" placeholder=\"Write a message...\" />\r\n\t\t\t\t\t\t<ErrorMessage className={s.errorMes} name=\"message\" component=\"div\" />\r\n\t\t\t\t\t\t<button className={s.bSend} type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nconst Dialogs = () => {\r\n\tconst { dialogsData, messageData } = useAppSelector((state) => state.dialogPage);\r\n\tconst { isAuth } = useAppSelector((state) => state.auth);\r\n\r\n\tlet dialogsItem = dialogsData.map((el: DialogType) => (\r\n\t\t<DialogItem id={el.id} name={el.name} key={el.id} />\r\n\t));\r\n\tlet messageItem = messageData.map((el: MessageType) => (\r\n\t\t<MessageItem message={el.message} key={el.id} />\r\n\t));\r\n\r\n\tif (!isAuth) {\r\n\t\treturn <Navigate to={\"/login\"} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div className={s.dialogs}>\r\n\t\t\t\t<ul className={s.dialogs_ul}>{dialogsItem}</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messageWrapper}>\r\n\t\t\t\t<div className={s.messages}>{messageItem}</div>\r\n\t\t\t\t<DialogsForm addMessage={actions.addMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n"],"names":["activeLink","isActive","d","id","name","path","className","to","message","s","DialogsForm","addMessage","dispatch","useAppDispatch","initialValues","validationSchema","Yup","required","onSubmit","values","setSubmitting","isSubmitting","as","placeholder","component","type","disabled","useAppSelector","state","dialogPage","dialogsData","messageData","isAuth","auth","dialogsItem","map","el","messageItem","actions"],"sourceRoot":""}