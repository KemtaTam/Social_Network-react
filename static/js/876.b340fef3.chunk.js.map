{"version":3,"file":"static/js/876.b340fef3.chunk.js","mappings":"wMACA,GAAgB,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,eAAiB,gCAAgC,YAAc,6BAA6B,MAAQ,wBCAxQ,EAA6B,+BAA7B,EAAmE,yBAAnE,EAAqG,2B,mBCE/FA,EAAa,SAAC,GAAD,SAAEC,SAAyBC,EAAWA,GAYzD,EAVmB,SAACC,GACnB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACC,eAAIC,UAAWJ,EAAf,UACC,SAAC,KAAD,CAASK,GAAIH,EAAME,UAAWN,EAA9B,SAA2CG,EAAMK,UCTpD,EAA+B,kCCS/B,EARoB,SAACL,GACpB,OACC,gBAAKG,UAAWG,EAAhB,SACEN,EAAMO,W,uCCGJC,EAAc,SAACR,GACpB,OACC,SAAC,KAAD,CACCS,cAAe,CAAEF,QAAS,IAC1BG,iBAAkBC,EAAAA,GAAW,CAC5BJ,QAASI,EAAAA,KAAaC,SAAS,MAEhCC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACpBf,EAAMgB,WAAWF,EAAOP,SACxBO,EAAOP,QAAU,GACjBQ,GAAc,IARhB,SAWE,gBAAGE,EAAH,EAAGA,aAAH,OACA,SAAC,KAAD,WACE,iBAAKd,UAAWG,EAAAA,YAAhB,WACA,SAAC,KAAD,CAAOY,GAAG,WAAWb,KAAK,UAAUc,YAAY,wBAChD,SAAC,KAAD,CAAchB,UAAWG,EAAAA,SAAYD,KAAK,UAAUe,UAAU,SAC9D,mBAAQjB,UAAWG,EAAAA,MAASe,KAAK,SAASC,SAAUL,EAApD,2BAmCN,EAzBgB,SAACjB,GAChB,IAAIuB,EAAcvB,EAAMwB,YAAYC,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAYxB,GAAIwB,EAAGxB,GAAIG,KAAMqB,EAAGrB,MAAWqB,EAAGxB,OACxFyB,EAAc3B,EAAM4B,YAAYH,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAanB,QAASmB,EAAGnB,SAAcmB,EAAGxB,OAExF,OAAIF,EAAM6B,QAKT,iBAAK1B,UAAWG,EAAAA,QAAhB,WACC,gBAAKH,UAAWG,EAAAA,QAAhB,UACC,eAAIH,UAAWG,EAAAA,WAAf,SACEiB,OAGH,iBAAKpB,UAAWG,EAAAA,eAAhB,WACC,gBAAKH,UAAWG,EAAAA,SAAhB,SACEqB,KAEF,SAACnB,GAAD,UAAiBR,WAdZ,SAAC,KAAD,CAAUI,GAAI,YC5BvB,GAAe0B,EAAAA,EAAAA,KACdC,EAAAA,EAAAA,KARqB,SAACC,GACtB,MAAO,CACNR,YAAaQ,EAAMC,WAAWT,YAC9BI,YAAaI,EAAMC,WAAWL,eAKN,CAACZ,WAAAA,EAAAA,IAC1BkB,EAAAA,EAFD,CAGCC,I,iJCZGC,EAA6B,SAACJ,GAAD,MAAY,CAC5CH,OAAQG,EAAMK,KAAKR,SAGPK,EAAmB,SAACI,GAAe,IAEzCC,EAFwC,0IAG7C,WACC,OAAIC,KAAKxC,MAAM6B,QACR,SAACS,GAAD,UAAeE,KAAKxC,SADG,SAAC,KAAD,CAAUI,GAAI,eAJA,GAEdqC,EAAAA,WAOhC,OAAQV,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/MessageItem/MessageItem.module.css?481d","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__9Kc2a\",\"dialogs\":\"Dialogs_dialogs__Dg0co\",\"messages\":\"Dialogs_messages__TNX5I\",\"dialogs_ul\":\"Dialogs_dialogs_ul__yz+cT\",\"messageWrapper\":\"Dialogs_messageWrapper__H0r0D\",\"sendMessage\":\"Dialogs_sendMessage__jkHpj\",\"bSend\":\"Dialogs_bSend__fVyxU\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs_li\":\"DialogItem_dialogs_li__qalbG\",\"item\":\"DialogItem_item__VDCuX\",\"active\":\"DialogItem_active__HPygb\"};","import d from \"./DialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst activeLink = ({isActive}) => isActive ? d.active : d.item; \r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\r\n\treturn (\r\n\t\t<li className={d.dialogs_li}>\r\n\t\t\t<NavLink to={path} className={activeLink}>{props.name}</NavLink>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message_item\":\"MessageItem_message_item__6f6c3\"};","import s from \"./MessageItem.module.css\"\r\n\r\nconst MessageItem = (props) => { \r\n\treturn (\r\n\t\t<div className={s.message_item}>\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MessageItem;","import s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst DialogsForm = (props) => {\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ message: '' }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tmessage: Yup.string().required(''),\r\n\t\t\t  })}\r\n\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\tprops.addMessage(values.message);\r\n\t\t\t\tvalues.message = '';\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t <div className={s.sendMessage}>\r\n\t\t\t\t\t\t<Field as=\"textarea\" name=\"message\" placeholder=\"Write a message...\"/>\r\n\t\t\t\t\t\t<ErrorMessage className={s.errorMes} name=\"message\" component=\"div\" />\r\n\t\t\t\t\t\t<button className={s.bSend} type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n  );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsItem = props.dialogsData.map(el => <DialogItem id={el.id} name={el.name} key={el.id}/>)\r\n\tlet messageItem = props.messageData.map(el => <MessageItem message={el.message} key={el.id}/>)\r\n\t\r\n\tif(!props.isAuth){\r\n\t\treturn <Navigate to={\"/login\"}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div className={s.dialogs}>\r\n\t\t\t\t<ul className={s.dialogs_ul}>\r\n\t\t\t\t\t{dialogsItem}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messageWrapper}>\r\n\t\t\t\t<div className={s.messages}>\r\n\t\t\t\t\t{messageItem}\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogsForm {...props}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { addMessage } from \"../../redux/reducers/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tdialogsData: state.dialogPage.dialogsData,\n\t\tmessageData: state.dialogPage.messageData,\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, {addMessage}), \n\twithAuthRedirect)\n(Dialogs);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif(!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\treturn  connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}"],"names":["activeLink","isActive","d","props","path","id","className","to","name","s","message","DialogsForm","initialValues","validationSchema","Yup","required","onSubmit","values","setSubmitting","addMessage","isSubmitting","as","placeholder","component","type","disabled","dialogsItem","dialogsData","map","el","messageItem","messageData","isAuth","compose","connect","state","dialogPage","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}