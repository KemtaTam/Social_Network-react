{"version":3,"file":"static/js/133.532c83d3.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Pages/Profile/ProfileInfo/ProfileData/ProfileData.module.css?a877","Pages/Profile/ProfileInfo/ProfileData/ProfileData.tsx","Pages/Profile/ProfileInfo/ProfileData/ProfileDataForm.tsx","webpack://my-app/./src/Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?b053","Pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","webpack://my-app/./src/Pages/Profile/ProfileInfo/ProfileInfo.module.css?f3a5","Pages/Profile/ProfileInfo/ProfileInfo.tsx","webpack://my-app/./src/Pages/Profile/Posts/Posts.module.css?2dd3","Pages/Profile/Posts/Post.tsx","Pages/Profile/Posts/Posts.tsx","webpack://my-app/./src/Pages/Profile/Profile.module.css?7a84","Pages/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_additional\":\"ProfileData_profile_additional__ajPvc\",\"profile_additional_kind\":\"ProfileData_profile_additional_kind__4aLCh\",\"error\":\"ProfileData_error__mWE+r\",\"errorMes\":\"ProfileData_errorMes__RkvEG\",\"errorText\":\"ProfileData_errorText__RUp24\"};","import React from \"react\";\r\nimport { ContactsType, ProfileDataType } from \"../../../../types/types\";\r\nimport p from \"./ProfileData.module.css\";\r\n\r\ntype PropsType = {\r\n\tusersData: ProfileDataType;\r\n\teditModeOn: () => void;\r\n\tisOwner: boolean;\r\n};\r\ntype PropsTypeContacts = {\r\n\tcontactTitle: string;\r\n\tcontactValue: string;\r\n\ttitle: boolean;\r\n};\r\n\r\nconst ProfileData: React.FC<PropsType> = ({ usersData, isOwner, editModeOn }) => {\r\n\tconst contactsTitle = Object.keys(usersData.contacts).map((key) => {\r\n\t\treturn (\r\n\t\t\t<Contacts\r\n\t\t\t\tkey={key}\r\n\t\t\t\tcontactTitle={key}\r\n\t\t\t\tcontactValue={usersData.contacts[key as keyof ContactsType]}\r\n\t\t\t\ttitle={true}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\tconst contactsValue = Object.keys(usersData.contacts).map((key) => {\r\n\t\treturn (\r\n\t\t\t<Contacts\r\n\t\t\t\tkey={key}\r\n\t\t\t\tcontactTitle={key}\r\n\t\t\t\tcontactValue={usersData.contacts[key as keyof ContactsType]}\r\n\t\t\t\ttitle={false}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={editModeOn}>Edit mode</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className={p.profile_additional}>\r\n\t\t\t\t<div className={p.profile_additional_kind}>\r\n\t\t\t\t\t<div>{usersData.aboutMe && \"About:\"}</div>\r\n\t\t\t\t\t<div>Looking for a job:</div>\r\n\t\t\t\t\t{contactsTitle}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={p.profile_additional_value}>\r\n\t\t\t\t\t<div>{usersData.aboutMe && usersData.aboutMe}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{!usersData.lookingForAJob ? \"No\" : usersData.lookingForAJobDescription}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{contactsValue}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Contacts: React.FC<PropsTypeContacts> = ({ contactValue, title, contactTitle }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{contactValue && (\r\n\t\t\t\t<div className={p.contacts}>{title ? contactTitle + \":\" : contactValue}</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ProfileDataType } from \"../../../../types/types\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux\";\r\nimport p from \"./ProfileData.module.css\";\r\nimport { saveProfile } from \"../../../../redux/reducers/profile-reducer\";\r\n\r\ntype PropsType = {\r\n\tusersData: ProfileDataType;\r\n\tsetEditMode: (editMode: boolean) => void;\r\n};\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({ usersData, setEditMode }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst contactsTitle = Object.keys(usersData.contacts).map((key) => {\r\n\t\treturn (\r\n\t\t\t<div key={key}>\r\n\t\t\t\t<Field name={\"contacts.\" + key} placeholder={key} />\r\n\t\t\t\t<ErrorMessage className={p.errorMes} name={key} component=\"div\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tuserId: usersData.userId,\r\n\t\t\t\tphotos: usersData.photos,\r\n\t\t\t\taboutMe: usersData.aboutMe,\r\n\t\t\t\tlookingForAJob: usersData.lookingForAJob,\r\n\t\t\t\tlookingForAJobDescription: usersData.lookingForAJobDescription,\r\n\t\t\t\tfullName: usersData.fullName,\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tfacebook: usersData.contacts.facebook,\r\n\t\t\t\t\twebsite: usersData.contacts.website,\r\n\t\t\t\t\tvk: usersData.contacts.vk,\r\n\t\t\t\t\ttwitter: usersData.contacts.twitter,\r\n\t\t\t\t\tinstagram: usersData.contacts.instagram,\r\n\t\t\t\t\tyoutube: usersData.contacts.youtube,\r\n\t\t\t\t\tgithub: usersData.contacts.github,\r\n\t\t\t\t\tmainLink: usersData.contacts.mainLink,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={Yup.object({})}\r\n\t\t\tonSubmit={(values, { setSubmitting, setStatus }) => {\r\n\t\t\t\tdispatch(saveProfile(values, setStatus, setEditMode));\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t}}>\r\n\t\t\t{({ isSubmitting, status }) => (\r\n\t\t\t\t<Form className={status && p.error}>\r\n\t\t\t\t\t<div className={p.errorText}>{status}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field name=\"fullName\" placeholder=\"fullName\" />\r\n\t\t\t\t\t\t<ErrorMessage className={p.errorMes} name=\"fullName\" component=\"div\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field name=\"aboutMe\" as=\"textarea\" placeholder=\"aboutMe\" />\r\n\t\t\t\t\t\t<ErrorMessage className={p.errorMes} name=\"aboutMe\" component=\"div\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tlookingForAJob: <Field name=\"lookingForAJob\" type=\"checkbox\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"lookingForAJobDescription\"\r\n\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\tplaceholder=\"lookingForAJobDescription\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tclassName={p.errorMes}\r\n\t\t\t\t\t\t\tname=\"lookingForAJobDescription\"\r\n\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\tContacts: <br />\r\n\t\t\t\t\t{contactsTitle}\r\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__9bSj3\",\"non_owner_status\":\"ProfileStatus_non_owner_status__XU3uC\"};","import React, { useEffect, useState, ChangeEvent } from \"react\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux\";\r\nimport { updateStatus } from \"../../../../redux/reducers/profile-reducer\";\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\ntype PropsType = {\r\n\tstatus: string;\r\n\tisOwner: boolean;\r\n};\r\n\r\nconst ProfileStatus: React.FC<PropsType> = ({ status, isOwner }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [_status, setStatus] = useState(status);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(status);\r\n\t}, [status]);\r\n\r\n\tconst changeEditMode = () => {\r\n\t\tif (isOwner) {\r\n\t\t\tsetEditMode(!editMode);\r\n\t\t\tif (editMode) dispatch(updateStatus(_status));\r\n\t\t}\r\n\t};\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode ? (\r\n\t\t\t\t<div onClick={changeEditMode} className={isOwner ? s.status : s.non_owner_status}>\r\n\t\t\t\t\t{!status ? \"status\" : status}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tonBlur={changeEditMode}\r\n\t\t\t\t\tvalue={_status}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile_wrapper\":\"ProfileInfo_profile_wrapper__6NeZa\",\"profile_info_wrapper\":\"ProfileInfo_profile_info_wrapper__NYGTx\",\"profile_wrapper_input\":\"ProfileInfo_profile_wrapper_input__pPQxm\",\"profile_img\":\"ProfileInfo_profile_img__kRmuO\",\"profile_name\":\"ProfileInfo_profile_name__8c61u\",\"loadImg\":\"ProfileInfo_loadImg__1QzXN\"};","import React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { savePhoto } from \"../../../redux/reducers/profile-reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport Preloader from \"../../../Components/common/Preloader/Preloader\";\r\nimport defaultAva from \"../../../images/default.png\";\r\nimport p from \"./ProfileInfo.module.css\";\r\n\r\ntype PropsType = {\r\n\tisOwner: boolean;\r\n};\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({ isOwner }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { usersData, status } = useAppSelector((state) => state.profilePage);\r\n\r\n\tif (!usersData) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\r\n\tconst sendPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files?.length) {\r\n\t\t\tdispatch(savePhoto(e.target.files[0]));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={p.profile_wrapper}>\r\n\t\t\t<div className={[p.profile_info_wrapper, isOwner && p.profile_wrapper_input].join(\" \")}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={p.profile_img}\r\n\t\t\t\t\tsrc={usersData.photos.small || defaultAva}\r\n\t\t\t\t\talt=\"ava\"></img>\r\n\t\t\t\t<div className={p.profile_info}>\r\n\t\t\t\t\t<div className={p.profile_name}>{usersData.fullName}</div>\r\n\t\t\t\t\t<ProfileStatus isOwner={isOwner} status={status} />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<ProfileDataForm usersData={usersData} setEditMode={setEditMode} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ProfileData\r\n\t\t\t\t\t\t\tusersData={usersData}\r\n\t\t\t\t\t\t\tisOwner={isOwner}\r\n\t\t\t\t\t\t\teditModeOn={() => setEditMode(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isOwner && <input className={p.loadImg} type=\"file\" onChange={sendPhoto} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile_posts\":\"Posts_profile_posts__IkAGr\",\"profile_title\":\"Posts_profile_title__TejTU\",\"profile_post\":\"Posts_profile_post__GW7C9\",\"post_wrapper\":\"Posts_post_wrapper__muG4H\",\"top_post_wrapper\":\"Posts_top_post_wrapper__eGYqx\",\"post_text\":\"Posts_post_text__Ile3t\",\"profile_new_post\":\"Posts_profile_new_post__Yq3hq\",\"bPublish\":\"Posts_bPublish__h1PFT\",\"likesCount\":\"Posts_likesCount__oDYVP\",\"errorMes\":\"Posts_errorMes__VtrI5\",\"bDel\":\"Posts_bDel__IiMy4\"};","import React from \"react\";\r\nimport { useAppDispatch } from \"../../../hooks/redux\";\r\nimport { actions } from \"../../../redux/reducers/profile-reducer\";\r\nimport p from \"./Posts.module.css\";\r\n\r\ntype PropsType = {\r\n\tid: number;\r\n\ttext: string;\r\n\tnumOfLike: number;\r\n};\r\nconst Post: React.FC<PropsType> = ({id, text, numOfLike}) => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\treturn (\r\n\t\t<div className={p.profile_post}>\r\n\t\t\t<div className={p.post_wrapper}>\r\n\t\t\t\t<div className={p.top_post_wrapper}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQblpU20ze2Vsusvi7MmRwzZYanB0cVwNJHg&usqp=CAU\"\r\n\t\t\t\t\t\talt=\"ava\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className={p.bDel} onClick={() => dispatch(actions.delPost(id))}>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={p.post_text}>{text}</div>\r\n\t\t\t</div>\r\n\t\t\t<button className={p.bLike} onClick={() => dispatch(actions.addLike(id))}>\r\n\t\t\t\tlike\r\n\t\t\t</button>{\" \"}\r\n\t\t\t<span className={p.likesCount}>{numOfLike}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Post from \"./Post\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux\";\r\nimport { actions } from \"../../../redux/reducers/profile-reducer\";\r\nimport s from \"./Posts.module.css\";\r\n\r\nconst PostsForm = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ post: \"\" }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tpost: Yup.string().required(\"\"),\r\n\t\t\t})}\r\n\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\tdispatch(actions.addPost(values.post));\r\n\t\t\t\tvalues.post = \"\";\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t}}>\r\n\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className={s.profile_new_post}>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\tcols=\"50\"\r\n\t\t\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\tplaceholder=\"What's new?\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage className={s.errorMes} name=\"post\" component=\"div\" />\r\n\t\t\t\t\t\t<button className={s.bPublish} type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tPublish\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nconst Posts = React.memo(() => {\r\n\tconst {postData} = useAppSelector((state) => state.profilePage)\r\n\r\n\tconst postItem = postData\r\n\t\t.map((el) => (\r\n\t\t\t<Post\r\n\t\t\t\tid={el.id}\r\n\t\t\t\tkey={el.id}\r\n\t\t\t\ttext={el.text}\r\n\t\t\t\tnumOfLike={el.likesCount}\r\n\t\t\t/>\r\n\t\t))\r\n\t\t.reverse();\r\n\r\n\treturn (\r\n\t\t<div className={s.profile_posts}>\r\n\t\t\t<div className={s.posts_wrapper}>\r\n\t\t\t\t<PostsForm  />\r\n\t\t\t\t{postItem.length > 0 ? <div className={s.profile_title}>Publications</div> : null}\r\n\t\t\t\t{postItem}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Posts;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__W8sQJ\",\"back_img\":\"Profile_back_img__NVu5A\"};","import { Navigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport Posts from \"./Posts/Posts\";\nimport Preloader from \"../../Components/common/Preloader/Preloader\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\nimport { getStatus, getUserProfile } from \"../../redux/reducers/profile-reducer\";\nimport s from \"./Profile.module.css\";\n\nconst Profile = () => {\n\tconst { isFetching } = useAppSelector((state) => state.profilePage);\n\tconst { isAuth, userId } = useAppSelector((state) => state.auth);\n\n\tconst dispatch = useAppDispatch();\n\tconst params = useParams();\n\n\tconst isOwner = !params.userId;\n\n\tuseEffect(() => {\n\t\tconst currentProfileID = params.userId || userId;\n\n\t\tif (!currentProfileID) {\n\t\t\tconsole.warn(\"ID should exists in URI params or in state ('userIdURL')\");\n\t\t} else {\n\t\t\tdispatch(getUserProfile(+currentProfileID)); //to number\n\t\t\tdispatch(getStatus(+currentProfileID)); //to number\n\t\t}\n\t}, [params, userId])\n\n\treturn (\n\t\t<section className={s.content}>\n\t\t\t{isFetching ? (\n\t\t\t\t<Preloader />\n\t\t\t) : isAuth ? (\n\t\t\t\t<div className={s.profile}>\n\t\t\t\t\t<ProfileInfo isOwner={isOwner} />\n\t\t\t\t\t<Posts />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<Navigate to={\"/login\"} />\n\t\t\t)}\n\t\t</section>\n\t);\n};\n\nexport default Profile;\n"],"names":["Contacts","contactValue","title","contactTitle","className","p","usersData","isOwner","editModeOn","contactsTitle","Object","keys","contacts","map","key","contactsValue","onClick","aboutMe","lookingForAJob","lookingForAJobDescription","setEditMode","dispatch","useAppDispatch","name","placeholder","component","initialValues","userId","photos","fullName","facebook","website","vk","twitter","instagram","youtube","github","mainLink","validationSchema","Yup","onSubmit","values","setSubmitting","setStatus","saveProfile","isSubmitting","status","as","type","disabled","useState","editMode","_status","useEffect","changeEditMode","updateStatus","onChange","e","currentTarget","value","autoFocus","onBlur","s","useAppSelector","state","profilePage","Preloader","join","src","small","defaultAva","alt","target","files","length","savePhoto","id","text","numOfLike","actions","PostsForm","post","required","cols","rows","React","postItem","postData","el","likesCount","reverse","isFetching","auth","isAuth","params","useParams","currentProfileID","getUserProfile","getStatus","console","warn","to"],"sourceRoot":""}